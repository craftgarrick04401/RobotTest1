// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "DriveTeleop.h"

DriveTeleop::DriveTeleop(double x, double y, double t): Command() {
    m_X = x;
    m_Y = y;
    m_T = t;

        // Use requires() here to declare subsystem dependencies
    	// eg. requires(Robot::chassis.get());

}



// Called just before this Command runs the first time
void DriveTeleop::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void DriveTeleop::Execute() {

	m_X = Robot::oi->getJoystick1()->GetX();
	m_Y = Robot::oi->getJoystick1()->GetY();
	m_T = Robot::oi->getJoystick1()->GetTwist();

	Robot::driveTrain->SetMotorSpeed(DriveTrain::TOP_LEFT, m_Y - m_T);
	Robot::driveTrain->SetMotorSpeed(DriveTrain::TOP_RIGHT, m_Y + m_T);
	Robot::driveTrain->SetMotorSpeed(DriveTrain::BOTTOM_LEFT, m_Y - m_T);
	Robot::driveTrain->SetMotorSpeed(DriveTrain::BOTTOM_RIGHT, m_Y + m_T);
	Robot::driveTrain->SetMotorSpeed(DriveTrain::CENTER, m_X);
}

// Make this return true when this Command no longer needs to run execute()
bool DriveTeleop::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void DriveTeleop::End() {
	Robot::driveTrain->StopMoving();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DriveTeleop::Interrupted() {
	Robot::driveTrain->StopMoving();
}
